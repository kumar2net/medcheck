// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Drug {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  category     String
  combination  String?
  strength     String?
  dosageForm   String?
  manufacturer String?
  price        Decimal?
  sideEffects  String?
  alternatives String?
  
  // Relationships
  familyMedications FamilyMedication[]

  @@map("drugs")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String
  email      String    @unique
  password   String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  @@map("users")
}

model FamilyMember {
  id              Int      @id @default(autoincrement())
  name            String
  age             Int?
  photo           String?
  allergies       String?
  conditions      String?
  emergencyContact String?
  emergencyPhone  String?
  role            String   @default("member") // "admin", "member", "child"
  isActive        Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  
  // Relationships
  medications     FamilyMedication[]

  @@map("family_members")
}

model FamilyMedication {
  id            Int      @id @default(autoincrement())
  familyMemberId Int
  drugId        Int
  dosage        String?
  frequency     String?
  startDate     DateTime @default(now())
  endDate       DateTime?
  notes         String?
  isActive      Boolean  @default(true)
  cost          Decimal?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  
  // Relationships
  familyMember  FamilyMember @relation(fields: [familyMemberId], references: [id], onDelete: Cascade)
  drug          Drug         @relation(fields: [drugId], references: [id])

  @@map("family_medications")
}
